// Code generated by MockGen. DO NOT EDIT.
// Source: recognize.go

// Package mock_alice is a generated GoMock package.
package mock_alice

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	alice "github.com/sku4/alice-checklist/models/alice"
)

// MockRecognize is a mock of Recognize interface.
type MockRecognize struct {
	ctrl     *gomock.Controller
	recorder *MockRecognizeMockRecorder
}

// MockRecognizeMockRecorder is the mock recorder for MockRecognize.
type MockRecognizeMockRecorder struct {
	mock *MockRecognize
}

// NewMockRecognize creates a new mock instance.
func NewMockRecognize(ctrl *gomock.Controller) *MockRecognize {
	mock := &MockRecognize{ctrl: ctrl}
	mock.recorder = &MockRecognizeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecognize) EXPECT() *MockRecognizeMockRecorder {
	return m.recorder
}

// Recognize mocks base method.
func (m *MockRecognize) Recognize(chanId int, req alice.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Recognize", chanId, req)
}

// Recognize indicates an expected call of Recognize.
func (mr *MockRecognizeMockRecorder) Recognize(chanId, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Recognize", reflect.TypeOf((*MockRecognize)(nil).Recognize), chanId, req)
}
