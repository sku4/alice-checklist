// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	alice "github.com/sku4/alice-checklist/models/alice"
)

// MockAlice is a mock of Alice interface.
type MockAlice struct {
	ctrl     *gomock.Controller
	recorder *MockAliceMockRecorder
}

// MockAliceMockRecorder is the mock recorder for MockAlice.
type MockAliceMockRecorder struct {
	mock *MockAlice
}

// NewMockAlice creates a new mock instance.
func NewMockAlice(ctrl *gomock.Controller) *MockAlice {
	mock := &MockAlice{ctrl: ctrl}
	mock.recorder = &MockAliceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlice) EXPECT() *MockAliceMockRecorder {
	return m.recorder
}

// Command mocks base method.
func (m *MockAlice) Command(arg0 alice.Request) (alice.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Command", arg0)
	ret0, _ := ret[0].(alice.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Command indicates an expected call of Command.
func (mr *MockAliceMockRecorder) Command(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Command", reflect.TypeOf((*MockAlice)(nil).Command), arg0)
}
