replicaCount: 1
image:
  repository: registry.digitalocean.com/sku4/repository
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets:
  - name: regcred
nameOverride: "alice-checklist"
fullnameOverride: "alice-checklist"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels:
  app: alice-checklist

podSecurityContext: {}
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  create: true
  type: ClusterIP
  externalPort: 80
  internalPort: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  email: skubach@tut.by

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

#livenessProbe:
#  httpGet:
#    path: /
#    port: http
#readinessProbe:
#  httpGet:
#    path: /
#    port: http

strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
  type: RollingUpdate

volumes:
  - name: googlekeep
    secret:
      secretName: googlekeep
  - name: db
    persistentVolumeClaim:
      claimName: boltdb
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts:
  - name: db
    mountPath: /root/db
  - name: googlekeep
    mountPath: /root/configs/googlekeep
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolume:
  path: /mnt/db
  nodeAffinity:
    hostname:
      - multitest
  storage: 5Mi

storageClass:
  create: true
certManager:
  enabled: false
